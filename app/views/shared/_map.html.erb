<% "AIzaSyD5OLpTd7Q483-N9EAcaQzkm7pXgRgBGm4" %>

<% center = {} %>

<% @list_of_sorted_cities.each do |city| %>
  <% if city[:name].match?(@city_name) %>
    <% center[:lat] = city[:latitude] %>
    <% center[:lng] = city[:longitude] %>
  <% end %>
<% end %>

<input id="pac-input" class="controls" type="text" placeholder="Search Box">
<div id="map"></div>
<script>
  function initAutocomplete() {
    var center = {lat: <%= center[:lat].to_s %>, lng: <%= center[:lng].to_s %>};

    var map = new google.maps.Map(document.getElementById('map'), {
      zoom: 10,
      center: center
    });


    var input = document.getElementById('pac-input');

    var searchBox = new google.maps.places.SearchBox(input);

    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);


    searchBox.addListener('places_changed', function() {
      var places = searchBox.getPlaces();

      if (places.length == 0) {
        return;
      }

      var bounds = new google.maps.LatLngBounds();
      places.forEach(function(place) {
        if (!place.geometry) {
          console.log("Returned place contains no geometry");
          return;
        }

        if (place.geometry.viewport) {
          bounds.union(place.geometry.viewport);
        } else {
          bounds.extend(place.geometry.location);
        }
      });
      map.fitBounds(bounds);
    });

    var cityMarkers = {};
    var infoWindow = {};

    google.maps.event.addListener(map, 'idle', function() {


      var currentMapCenter = map.getCenter();

      var coordinates = {lat: currentMapCenter.lat(), lng: currentMapCenter.lng(), west: map.getBounds().b.b, east: map.getBounds().b.f, north: map.getBounds().f.f, south: map.getBounds().f.b}

      if (RAILS_PARAMS.since) coordinates.since = RAILS_PARAMS.since;

      $.ajax({
        type: 'GET',
        url: 'http://localhost:3000/api/v1/articles',
        data: coordinates,
        dataType: 'json',
        success: function (data) {
          $.each(data, function(index, element) {
            cityMarkers[index] = new google.maps.Marker({
              position: { lat: element.posts[0].thread.latitude, lng: element.posts[0].thread.longitude },
              map: map
            });


            google.maps.event.addListener(cityMarkers[index], 'click', function() {


                // debugger;
              infoWindow[index] = new google.maps.InfoWindow({
                content: '<h5>' + [index] + '</h5>' +
                 '<br>' + '<img src="//logo.clearbit.com/' + element.posts[0].thread.site_full + '?size=30"> ' + '<a href="' + element.posts[0].thread.url + '"" target="_blank">' + element.posts[0].thread.title + '</a>' + '<br>' +
                 '<br>' + '<img src="//logo.clearbit.com/' + element.posts[1].thread.site_full + '?size=30"> ' + '<a href="' + element.posts[1].thread.url + '"" target="_blank">' + element.posts[1].thread.title + '</a>' + '<br>' +
                 '<br>' + '<img src="//logo.clearbit.com/' + element.posts[2].thread.site_full + '?size=30"> ' + '<a href="' + element.posts[2].thread.url + '"" target="_blank">' + element.posts[2].thread.title + '</a>' + '<br>' +
                 '<br>' + '<img src="//logo.clearbit.com/' + element.posts[3].thread.site_full + '?size=30"> ' + '<a href="' + element.posts[3].thread.url + '"" target="_blank">' + element.posts[3].thread.title + '</a>' + '<br>' +
                 '<br>' + '<img src="//logo.clearbit.com/' + element.posts[4].thread.site_full + '?size=30"> ' + '<a href="' + element.posts[4].thread.url + '"" target="_blank">' + element.posts[4].thread.title + '</a>'
              });

              cityMarkers[index].addListener('click', function() {
                infoWindow[index].open(map, cityMarkers[index]);
              });
            });
          });
        }
      });
    });

  }
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD5OLpTd7Q483-N9EAcaQzkm7pXgRgBGm4&libraries=places&callback=initAutocomplete"
 async defer></script>

