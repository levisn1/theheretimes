<% "AIzaSyD5OLpTd7Q483-N9EAcaQzkm7pXgRgBGm4" %>

<% center = {} %>

<% @list_of_sorted_cities.each do |city| %>
<% if city[:name].match?(@city_name) %>
<% center[:lat] = city[:latitude] %>
<% center[:lng] = city[:longitude] %>
<% end %>
<% end %>


<input id="pac-input" class="controls" type="text" placeholder="Search Box">

<div class="loader" id="loader">
  <span>{</span><span>}</span>
</div>

<div id="map">
</div>
<script>
  function initAutocomplete() {

    $(document).ajaxStop(function(){
      document.getElementById("loader").classList.toggle("loader");
    });

    var center = {lat: <%= center[:lat].to_s %>, lng: <%= center[:lng].to_s %>};

    var map = new google.maps.Map(document.getElementById('map'), {
      zoom: 9,
      center: center,
      mapTypeControl: false,
      streetViewControl: false,

      styles: [
      {
        "elementType": "geometry",
        "stylers": [
        {
          "color": "#f5f5f5"
        }
        ]
      },
      {
        "elementType": "labels.icon",
        "stylers": [
        {
          "visibility": "off"
        }
        ]
      },
      {
        "elementType": "labels.text.fill",
        "stylers": [
        {
          "color": "#616161"
        }
        ]
      },
      {
        "elementType": "labels.text.stroke",
        "stylers": [
        {
          "color": "#f5f5f5"
        }
        ]
      },
      {
        "featureType": "administrative",
        "elementType": "geometry",
        "stylers": [
        {
          "visibility": "off"
        }
        ]
      },
      {
        "featureType": "administrative.land_parcel",
        "elementType": "labels",
        "stylers": [
        {
          "visibility": "off"
        }
        ]
      },
      {
        "featureType": "administrative.land_parcel",
        "elementType": "labels.text.fill",
        "stylers": [
        {
          "color": "#bdbdbd"
        }
        ]
      },
      {
        "featureType": "poi",
        "stylers": [
        {
          "visibility": "off"
        }
        ]
      },
      {
        "featureType": "poi",
        "elementType": "geometry",
        "stylers": [
        {
          "color": "#eeeeee"
        }
        ]
      },
      {
        "featureType": "poi",
        "elementType": "labels.text",
        "stylers": [
        {
          "visibility": "off"
        }
        ]
      },
      {
        "featureType": "poi",
        "elementType": "labels.text.fill",
        "stylers": [
        {
          "color": "#757575"
        }
        ]
      },
      {
        "featureType": "poi.park",
        "elementType": "geometry",
        "stylers": [
        {
          "color": "#e5e5e5"
        }
        ]
      },
      {
        "featureType": "poi.park",
        "elementType": "labels.text.fill",
        "stylers": [
        {
          "color": "#9e9e9e"
        }
        ]
      },
      {
        "featureType": "road",
        "elementType": "geometry",
        "stylers": [
        {
          "color": "#ffffff"
        }
        ]
      },
      {
        "featureType": "road",
        "elementType": "labels.icon",
        "stylers": [
        {
          "visibility": "off"
        }
        ]
      },
      {
        "featureType": "road.arterial",
        "elementType": "labels",
        "stylers": [
        {
          "visibility": "off"
        }
        ]
      },
      {
        "featureType": "road.arterial",
        "elementType": "labels.text.fill",
        "stylers": [
        {
          "color": "#757575"
        }
        ]
      },
      {
        "featureType": "road.highway",
        "elementType": "geometry",
        "stylers": [
        {
          "color": "#dadada"
        }
        ]
      },
      {
        "featureType": "road.highway",
        "elementType": "labels",
        "stylers": [
        {
          "visibility": "off"
        }
        ]
      },
      {
        "featureType": "road.highway",
        "elementType": "labels.text.fill",
        "stylers": [
        {
          "color": "#616161"
        }
        ]
      },
      {
        "featureType": "road.local",
        "stylers": [
        {
          "visibility": "off"
        }
        ]
      },
      {
        "featureType": "road.local",
        "elementType": "labels",
        "stylers": [
        {
          "visibility": "off"
        }
        ]
      },
      {
        "featureType": "road.local",
        "elementType": "labels.text.fill",
        "stylers": [
        {
          "color": "#9e9e9e"
        }
        ]
      },
      {
        "featureType": "transit",
        "stylers": [
        {
          "visibility": "off"
        }
        ]
      },
      {
        "featureType": "transit.line",
        "elementType": "geometry",
        "stylers": [
        {
          "color": "#e5e5e5"
        }
        ]
      },
      {
        "featureType": "transit.station",
        "elementType": "geometry",
        "stylers": [
        {
          "color": "#eeeeee"
        }
        ]
      },
      {
        "featureType": "water",
        "elementType": "geometry",
        "stylers": [
        {
          "color": "#c9c9c9"
        }
        ]
      },
      {
        "featureType": "water",
        "elementType": "labels.text.fill",
        "stylers": [
        {
          "color": "#9e9e9e"
        }
        ]
      }
      ]
    });


var input = document.getElementById('pac-input');

var searchBox = new google.maps.places.SearchBox(input);

map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);


searchBox.addListener('places_changed', function() {
  var places = searchBox.getPlaces();

  if (places.length == 0) {
    return;
  }

  var bounds = new google.maps.LatLngBounds();
  places.forEach(function(place) {
    if (!place.geometry) {
      console.log("Returned place contains no geometry");
      return;
    }

    if (place.geometry.viewport) {
      bounds.union(place.geometry.viewport);
    } else {
      bounds.extend(place.geometry.location);
    }
  });
  map.fitBounds(bounds);
});

var cityMarkers = {};
var infoWindow = {};


google.maps.event.addListener(map, 'idle', function() {

  var currentMapCenter = map.getCenter();

  var coordinates = {lat: currentMapCenter.lat(), lng: currentMapCenter.lng(), west: map.getBounds().b.b, east: map.getBounds().b.f, north: map.getBounds().f.f, south: map.getBounds().f.b}

  if (RAILS_PARAMS.since) coordinates.since = RAILS_PARAMS.since;

  $.ajax({
    type: 'GET',
    url: '/api/v1/articles',
    data: coordinates,
    dataType: 'json',
    beforeSend: function(){
      $('.loader').show()
    },
    complete: function(){
      $('.loader').hide();
    },
    success: function (data) {
      $.each(data, function(index, element) {
        if (element.posts.length === 0) {
          return true;
        }

        cityMarkers[index] = new google.maps.Marker({
          position: { lat: element.posts[0].thread.latitude, lng: element.posts[0].thread.longitude },
          icon: 'https://imageshack.com/a/img922/7611/LqL1kh.png',

          map: map
        });

        var line = function(post) {
          return  '<div class="row info_window-item"> <img class="logo_info col-xs-2" src="//logo.clearbit.com/' + post.thread.site_full + '?size=40" onerror="this.src=\'https://image.flaticon.com/icons/svg/448/448589.svg\'">' +
          '<a href="' + post.thread.url + '"" target="_parent" class="col-xs-8">' + post.thread.title + '</a> <a href="/bookmarks?url='+post.thread.url + '&title=' + post.thread.title + '&category=' + post.thread.site_categories + '&city=' + post.thread.city + '&source=' + post.thread.site_full + '&published=' + post.thread.published + '&lat=' + post.thread.lat + '&lng=' + post.thread.lng + '&method=post" data-method="post"><i class="far fa-bookmark col-xs-2"></i></a> </div>';
        };


            var contentHtml = function(city, posts) {
              var html = [];

              html.push('<div class="iw-title">'+'<h2>'+city+'</h2>'+'</div>');

              html.push("<div class='iw-content'>")

              posts.forEach(function(post) {
                html.push("<br>");
                html.push(line(post));
              });

              html.push("</div>")

              return html.join("");
            }


            google.maps.event.addListener(cityMarkers[index], 'click', function() {
              infoWindow[index] = new google.maps.InfoWindow({
                maxWidth: 350,
                content: contentHtml(index, element.posts)
              });
              infoWindow[index].open(map, cityMarkers[index]);

            });


          });
    }
  });
});

}
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD5OLpTd7Q483-N9EAcaQzkm7pXgRgBGm4&libraries=places&callback=initAutocomplete"
async defer></script>

